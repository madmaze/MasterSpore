#!/usr/bin/python

import os
import sys
import time
#######################
# 0 = none
# 1 = info
# 2 = debug
logLevel=0
######################

def run(cmd):
	f=os.popen(cmd)
	buf=""
	for i in f.readlines():
		buf+=i
	return buf.strip()

def log(msg, lvl):
	if logLevel >= lvl:
		print msg
		

def curSpotCost(inst_size):
	lt = time.localtime(time.time())	
	curdate = str(lt[0])+"-"+str(lt[1])+"-"+str(lt[2])+"T"+str(lt[3])+":"+str(lt[4])+":"+str(lt[5])+":"+str(lt[6])+"-0000"
	try:
		res = run("ec2-describe-spot-price-history -d Linux/UNIX --region us-east-1 --instance-type "+inst_size+" -s "+curdate)
		if res.find("timeout")>=0:
			print "TIMEOUT: ", res
			return -1
		cost=0
		for i in res.split("\n"):
			cost += float((i.split("\t"))[1]);
		cost = cost/len(res.split("\n"))
	except Exception as x:
		print x, "\n", res
		return -1
	log("Current Instance Cost: "+str(cost), 1);
	return cost

def launchCluster(maxPrice,inst_size,nodes):
	curPrice=curSpotCost(inst_size)
	if curPrice == -1:
		print "Error: Failed to get current spot price."
		sys.exit(-1)
	if curPrice > maxPrice:
		print "Error: Current spot price too high."
		sys.exit(-2)
	for n in range (0,nodes):
		print n


if __name__ == "__main__":
	for arg in sys.argv[1:]:
		if arg == "-debug":
			logLevel=2
		if arg == "-info":
			logLevel=1
	launchCluster(.1, "t1.micro", 10)
